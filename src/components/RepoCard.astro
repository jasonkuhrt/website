---
import type { GitHubRepo } from '../lib/github.js'
import { Icon } from 'astro-icon/components'
import { format } from 'date-fns'

interface Props {
  repo: GitHubRepo
}

const { repo } = Astro.props

// Format the last updated date (relative)
const formatRelativeDate = (dateString: string): string => {
  const date = new Date(dateString)
  const now = new Date()
  const diffInDays = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24))

  if (diffInDays === 0) return 'today'
  if (diffInDays === 1) return 'yesterday'
  if (diffInDays < 7) return `${diffInDays} days ago`
  if (diffInDays < 30) return `${Math.floor(diffInDays / 7)} weeks ago`
  if (diffInDays < 365) return `${Math.floor(diffInDays / 30)} months ago`
  return `${Math.floor(diffInDays / 365)} years ago`
}

// Format abbreviated date
const formatAbbreviatedDate = (dateString: string): string => {
  return format(new Date(dateString), 'MMM d, yyyy')
}

const relativeDate = formatRelativeDate(repo.pushedAt)
const abbreviatedDate = formatAbbreviatedDate(repo.pushedAt)
---

<div
  class="flex flex-col h-full group border border-gray-200 dark:border-gray-800 rounded p-6 hover:border-gray-300 dark:hover:border-gray-700 transition-colors"
>
  <a href={repo.url} target="_blank" rel="noopener noreferrer" class="flex flex-col flex-grow">
    <!-- Header with name and stats -->
    <div class="flex items-center justify-between mb-2">
      <h3
        class="text-xl font-semibold group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors"
      >
        {repo.name}
      </h3>
      <div class="flex items-center gap-3 text-sm text-gray-500 dark:text-gray-400 flex-shrink-0 ml-4">
        <div class="flex items-center gap-1" title="Stars">
          <Icon name="carbon:star" class="w-4 h-4" />
          <span>{repo.stargazerCount}</span>
        </div>
        <div class="flex items-center gap-1" title="Forks">
          <Icon name="carbon:branch" class="w-4 h-4" />
          <span>{repo.forkCount}</span>
        </div>
      </div>
    </div>

    <!-- Description -->
    <p class="text-sm text-gray-600 dark:text-gray-400 mb-3 flex-grow">
      {repo.description || 'No description available'}
    </p>

    <!-- Compact data list -->
    <dl class="space-y-1 text-xs text-gray-500 dark:text-gray-400">
      {
        repo.primaryLanguage && (
          <div class="flex items-center">
            <dt class="opacity-60 flex-shrink-0">Language</dt>
            <div class="flex-grow mx-2 border-b border-dotted border-gray-300 dark:border-gray-700 opacity-30" />
            <dd class="flex-shrink-0 truncate text-right">{repo.primaryLanguage.name}</dd>
          </div>
        )
      }
      <div class="flex items-center">
        <dt class="opacity-60 flex-shrink-0">Last updated</dt>
        <div class="flex-grow mx-2 border-b border-dotted border-gray-300 dark:border-gray-700 opacity-30">
        </div>
        <dd
          class="flex-shrink-0 cursor-pointer hover:opacity-70 transition-opacity text-right"
          data-relative={relativeDate}
          data-abbreviated={abbreviatedDate}
          onclick="this.textContent = this.textContent === this.dataset.relative ? this.dataset.abbreviated : this.dataset.relative"
        >
          {relativeDate}
        </dd>
      </div>
    </dl>
  </a>
</div>

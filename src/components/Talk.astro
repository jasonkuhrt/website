---
interface Props {
  title: string
  venue: string
  date: string
  links?: {
    recording?: string
    info?: string
    twitter?: string
    repo?: string
  }
}

const props = Astro.props
import { Icon } from 'astro-icon/components'
---

<div class="flex flex-col md:flex-row text-sm hover:bg-gray-50 dark:hover:bg-gray-800 p-2">
  <div class="p-3 align-top">
    <div class="md:w-96">
      <div>{props.title}</div>
      <div class="opacity-40">@ {props.venue}</div>
    </div>
  </div>
  <div class="p-3 align-top">{props.date}</div>
  <div class="p-3 align-top">
    <div class="flex space-x-2">
      {
        props.links?.repo ? (
          <a class="opacity-20 dark:opacity-40 hover:opacity-100" href={props.links.repo}>
            <Icon name="lucide:github" />
          </a>
        ) : (
          <div class="opacity-10 dark:opacity-20">
            <Icon name="lucide:github" />
          </div>
        )
      }
      {
        props.links?.info ? (
          <a class="opacity-20 dark:opacity-40 hover:opacity-100" href={props.links.info}>
            <Icon name="lucide:link" />
          </a>
        ) : (
          <div class="opacity-10 dark:opacity-20">
            <Icon name="lucide:link" />
          </div>
        )
      }
      {
        props.links?.recording ? (
          <a class="opacity-20 dark:opacity-40 hover:opacity-100" href={props.links.recording}>
            <Icon name="lucide:play" />
          </a>
        ) : (
          <div class="opacity-10 dark:opacity-20">
            <Icon name="lucide:video" />
          </div>
        )
      }
      {
        props.links?.twitter && (
          <a class="opacity-20 dark:opacity-40 hover:opacity-100" href={props.links?.twitter}>
            <Icon name="lucide:twitter" />
          </a>
        )
      }
    </div>
  </div>
</div>
